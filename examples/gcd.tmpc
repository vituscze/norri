-- Absolute value.
abs : Int -> Int;
abs n = if_ (n < 0) (~n) n;

-- Greatest common divisor.
gcd : Int -> Int -> Int;
gcd x y =
    -- Euclid's algorithm.
    let go a b = if_ (b == 0) a (go b (a % b))
    in  go (abs x) (abs y);

data List a = Nil | Cons a (List a);

foldr : (a -> b -> b) -> b -> List a -> b;
foldr f z = list z (\x xs -> f x (foldr f z xs));

-- Greatest common divisor of a list of numbers.
gcds = foldr gcd 0
