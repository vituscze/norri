abs : Int -> Int;
abs n = if_ (n < 0) (~n) n;

gcd : Int -> Int -> Int;
gcd x y =
    let go a b = if_ (b == 0) a (go b (a % b))
    in  go (abs x) (abs y);

data List a = Node a (List a) | End;

foldr : (a -> b -> b) -> b -> List a -> b;
foldr f z = list (\x xs -> f x (foldr f z xs)) z;

gcds : List Int -> Int;
gcds = foldr gcd 0